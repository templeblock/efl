enum Elm.Actionslider.Pos
{
  [[A position for indicators, magnets, and enabled items.]]
   legacy: elm_actionslider;

   none = 0, [[No position is set.]]
   left = 1 << 0, [[Left position.]]
   center = 1 << 1, [[Center position.]]
   right = 1 << 2, [[Right position.]]
   all = (1 << 3) - 1 [[All positions for left/center/right.]]
}

class Elm.Actionslider (Elm.Layout, Efl.Ui.Selectable)
{
   [[An actionslider is a switcher for 2 or 3 labels

   with customizable magnet properties. The user drags and releases
   the indicator, to choose a label. When the indicator is released,
   it will move to its nearest "enabled and magnetized" position.
   ]]

   legacy_prefix: elm_actionslider;
   eo_prefix: elm_obj_actionslider;
   event_prefix: elm_actionslider;
   methods {
      @property indicator_pos {
         [[Actionslider position indicator]]
         set {
         }
         get {
         }
         values {
            pos: Elm.Actionslider.Pos; [[The position of the indicator.]]
         }
      }
      @property magnet_pos {
         [[Actionslider magnet position.]]
         set {
            [[To make multiple positions magnets OR them together (e.g.
              ELM_ACTIONSLIDER_LEFT | ELM_ACTIONSLIDER_RIGHT)
            ]]
         }
         get {
         }
         values {
            pos: Elm.Actionslider.Pos; [[Bit mask indicating the magnet positions.]]
         }
      }
      @property enabled_pos {
         [[Actionslider enabled position.]]
         set {
            [[To set multiple positions as enabled OR them together(e.g.
              ELM_ACTIONSLIDER_LEFT | ELM_ACTIONSLIDER_RIGHT).

              Note: All the positions are enabled by default.
            ]]
         }
         get {
         }
         values {
            pos: Elm.Actionslider.Pos; [[Bit mask indicating the enabled positions.]]
         }
      }
      @property selected_label {
         get {
            [[Get actionslider selected label.]]
            return: string; [[Selected label]]
         }
      }
   }
   implements {
      class.constructor;
      Efl.Object.constructor;
      Efl.Canvas.Group.group_add;
      Elm.Widget.focus_next_manager_is;
      Elm.Widget.focus_direction_manager_is;
      Elm.Widget.theme_apply;
      Elm.Layout.text_aliases { get; }
      Elm.Layout.sizing_eval;
      Efl.Part.part;
   }
   events {
      pos_changed; [[The position of the actionslider has changed]]
   }
}
